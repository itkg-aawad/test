<?php

namespace ayman\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * @author ayman
 */

class ArticleRepository extends EntityRepository
{
    /**
     * 
     * @return $resultats
     */
    public function myFindAll()
    {
        $queryBuilder = $this->createQueryBuilder('a');
        $query = $queryBuilder->getQuery();
        // On récupère les résultats à partir de la Query
        $resultats = $query->getResult();
        //On retourne ces résultats
        return $resultats;
    }

    public function getAvecCategories(array $nom_categories)
    {
        $qb = $this->createQueryBuilder('a');
        // On fait une jointure avec l'entité Categorie, avec pour alias « c »!
        $qb->join('a.categories', 'c')->where($qb->expr()->in('c.nom', $nom_categories));
        // Puison filtre sur le nom des catégories à l'aide d'un IN!
    }
    
    public function getArticle($nombreParPage, $page)
    {
        
        if ($page < 1) {
            throw new \InvalidArgumentException('L\'argument $page ne peut être inférieur à 1 (valeur : "'.$page.'").');
        }
         
        $query = $this->createQueryBuilder('a')
                    // On joint sur l'attribut image
                    ->leftJoin('a.image', 'i')
                    ->addSelect('i')
                    // On joint sur l'attribut categories
                    ->leftJoin('a.categories', 'c')
                    ->addSelect('c')
                    ->orderBy('a.date', 'DESC')
                    ->getQuery();
        
        // On définit l'article à partir duquel commencer la liste
        
        $query->setFirstResult(($page-1) * $nombreParPage)
        // Ainsi que le nombre d'articles à afficher 
                    ->setMaxResults($nombreParPage);
        // Enfin, on retourne l'objet Paginator correspondant à larequête construite
        // (n'oubliez pas le use correspondant en début de fichier)
        return new Paginator($query);

    }
}